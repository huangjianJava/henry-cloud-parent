<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.henry.cloud</groupId>
    <artifactId>henry-cloud-parent</artifactId>
    <version>1.0.1</version>
    <packaging>pom</packaging>
    <name>henry-cloud-parent</name>
    <description>demo for myself test</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.13.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <infrastructure.version>2.0.37-SNAPSHOT</infrastructure.version>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <commons-configuration.version>1.10</commons-configuration.version>
        <commons_logging_api.version>1.1</commons_logging_api.version>
        <commons-beanutils.version>1.9.3</commons-beanutils.version>
        <commons-collections.version>3.2.2</commons-collections.version>
        <commons-io.version>2.5</commons-io.version>
        <commons-lang3.version>3.4</commons-lang3.version>
        <commons-codec.version>1.9</commons-codec.version>
        <jackson.version>2.8.4</jackson.version>
        <mysql.version>5.1.30</mysql.version>
        <mybatis.spring.boot.starter.version>1.3.0</mybatis.spring.boot.starter.version>
        <mapper-spring-boot-starter>1.1.7</mapper-spring-boot-starter>
        <pagehelper-spring-boot-starter>1.2.3</pagehelper-spring-boot-starter>
        <druid.version>1.1.6</druid.version>
        <fastjson.version>1.2.12</fastjson.version>
        <spring.kafka.version>1.2.1.RELEASE</spring.kafka.version>
        <gson.version>2.8.1</gson.version>
        <guava.version>23.0</guava.version>
        <snakeyaml.version>1.17</snakeyaml.version>
        <protobuf.java.version>2.6.1</protobuf.java.version>
        <avro.version>1.8.2</avro.version>
        <com.google.zxing.version>3.3.1</com.google.zxing.version>
        <thumbnailator.version>0.4.8</thumbnailator.version>
        <sharding-jdbc.version>2.0.0</sharding-jdbc.version>
        <!-- swagger libs -->
        <springfox.swagger.version>2.7.0</springfox.swagger.version>
        <swagger-bootstrap-ui.version>1.7.5</swagger-bootstrap-ui.version>

        <!-- test -->
        <junit.version>4.12</junit.version>
        <mockito.all.version>1.10.19</mockito.all.version>
        <hamcrest.version>1.3</hamcrest.version>
        <canal.client.version>1.0.24</canal.client.version>

        <!-- JSR 303 with Hibernate Validator -->
        <validation.api.version>1.1.0.Final</validation.api.version>
        <hibernate.validator.version>5.4.1.Final</hibernate.validator.version>

        <!-- Specify Java Compiler Version -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- springloaded -->
        <springloaded.version>1.2.6.RELEASE</springloaded.version>
        <spring.boot.admin.version>1.5.5</spring.boot.admin.version>
        <poi.version>3.17</poi.version>

        <kaptcha.version>0.0.9</kaptcha.version>
    </properties>

    <!-- dependencyManagement：只是声明依赖，并不实现引入，因此子项目需要显示的声明需要用的依赖。
    只有在子项目中写了该依赖项，并且没有指定具体版本，才会从父项目中继承该项，并且version和scope都读取自父pom;
    另外如果子项目中指定了版本号，那么会使用子项目中指定的jar版本。
    dependencies：即使在子项目中不写该依赖项，那么子项目仍然会从父项目中继承该依赖项（全部继承）-->
    <dependencyManagement>
        <dependencies>
            <!-- guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <!-- end -->

            <!-- infrastructure -->
            <dependency>
                <groupId>org.infrastructure</groupId>
                <artifactId>org.infrastructure.result</artifactId>
                <version>${infrastructure.version}</version>
            </dependency>
            <dependency>
                <groupId>org.infrastructure</groupId>
                <artifactId>org.infrastructure.common</artifactId>
                <version>${infrastructure.version}</version>
            </dependency>
            <!-- end -->

        </dependencies>

    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- end -->

    </dependencies>

    <modules>
        <module>hcloud-member-service</module>
        <module>hcloud-member-api</module>
        <module>hcloud-common</module>
    </modules>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
        </plugins>
    </build>


</project>